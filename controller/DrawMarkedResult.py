from PIL import Image, ImageDraw
from io import BytesIO
import Config
from constants import IMAGE_POSITION_COORDINATES


class DrawMarkedResult(object):
    
    @classmethod
    def _sumCenterPoint(cls, a: tuple, b: tuple) -> tuple:
        x = int((b[0] - a[0]) // 2 + a[0])
        y = int((b[1] - a[1]) // 2 + a[1])
        # +30 补偿y轴距离
        return (x, y + 30)

    @classmethod
    def _imageToBytes(cls, image: Image) -> bytes:
        imageIO = BytesIO()
        image.save(imageIO, format="JPEG")
        return imageIO.getvalue()

    @classmethod
    def checkmark(cls, imageByte: bytes, ids: list) -> bytes:
        """draw marked result at origin image"""
        # imageArray = np.asarray(Image.open(BytesIO(imageByte)), dtype="uint8")
        # image = cv2.imdecode(imageArray, cv2.IMREAD_UNCHANGED)
        image = Image.open(BytesIO(imageByte)).convert("RGB")
        draw = ImageDraw.Draw(image)
        for id in ids:
            # draw checkmark
            centerPoint = cls._sumCenterPoint(
                (IMAGE_POSITION_COORDINATES[id][0][0], IMAGE_POSITION_COORDINATES[id][0][1] - 30),
                (IMAGE_POSITION_COORDINATES[id][1][0], IMAGE_POSITION_COORDINATES[id][1][1] - 30)
            )
            # checkmark center point
            tickMidpoint = (
                centerPoint[0] + 2,
                centerPoint[1] + 5
            )
            # a and b is checkmark left and right coordinate
            a = (centerPoint[0] - 5, centerPoint[1] - 5)
            b = (centerPoint[0] + 10, centerPoint[1] - 10)
        
            draw.line([a, tickMidpoint], fill=Config.DRAW_CONFIG["color"], width=Config.DRAW_CONFIG["lineSize"])
            draw.line([tickMidpoint, b], fill=Config.DRAW_CONFIG["color"], width=Config.DRAW_CONFIG["lineSize"])
            
        return cls._imageToBytes(image)

    @classmethod
    def rectangle(cls, imageByte: bytes, ids: list) -> bytes:
        image = Image.open(BytesIO(imageByte)).convert("RGB")
        draw = ImageDraw.Draw(image)
        for id in ids:
            draw.rectangle(
                [IMAGE_POSITION_COORDINATES[id][0], IMAGE_POSITION_COORDINATES[id][1]],
                outline=Config.DRAW_CONFIG["color"],
                width=Config.DRAW_CONFIG["lineSize"]
            )
        return cls._imageToBytes(image)


if __name__ == '__main__':
    
    import base64
    imageStr = ""
    ids = [5, 7]
    imageByte = base64.b64decode(imageStr)
    result = DrawMarkedResult.rectangle(imageByte, ids)
    with open("result.jpg", "wb") as f:
        f.write(result)
        